package com.ruoyi.fac.mapper;

import com.ruoyi.fac.model.FacLeaveMessageReply;
import com.ruoyi.fac.model.FacLeaveMessageReplyExample;
import java.util.List;
import org.apache.ibatis.annotations.Param;

public interface FacLeaveMessageReplyMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fac_leave_message_reply
     *
     * @mbggenerated
     */
    int countByExample(FacLeaveMessageReplyExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fac_leave_message_reply
     *
     * @mbggenerated
     */
    int deleteByExample(FacLeaveMessageReplyExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fac_leave_message_reply
     *
     * @mbggenerated
     */
    int insert(FacLeaveMessageReply record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fac_leave_message_reply
     *
     * @mbggenerated
     */
    int insertSelective(FacLeaveMessageReply record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fac_leave_message_reply
     *
     * @mbggenerated
     */
    List<FacLeaveMessageReply> selectByExample(FacLeaveMessageReplyExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fac_leave_message_reply
     *
     * @mbggenerated
     */
    int updateByExampleSelective(@Param("record") FacLeaveMessageReply record, @Param("example") FacLeaveMessageReplyExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fac_leave_message_reply
     *
     * @mbggenerated
     */
    int updateByExample(@Param("record") FacLeaveMessageReply record, @Param("example") FacLeaveMessageReplyExample example);
}